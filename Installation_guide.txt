sudo pip2 install virtualenv

virtualenv myprojectenv

source myprojectenv/bin/activate

pip install -r /path/to/requirements.txt


---------------------------------------------------------------------------------------------------------------------

install mariadb from:

https://www.linuxbabe.com/mariadb/install-mariadb-10-1-ubuntu14-04-15-10


apt-get install libmysqlclient-dev

CREATE DATABASE security CHARACTER SET utf8 COLLATE utf8_persian_ci;
CREATE DATABASE advertiser CHARACTER SET utf8 COLLATE utf8_persian_ci;


mysql -u root -p advertiser < advertiser.sql
mysql -u root -p security < security.sql


---------------------------------------------------------------------------------------------------------------------

install redis:

wget http://download.redis.io/redis-stable.tar.gz
tar xvzf redis-stable.tar.gz
cd redis-stable
make



Configure Redis persistence from:

https://redis.io/docs/latest/operate/oss_and_stack/install/install-redis/


sudo cp src/redis-server /usr/local/bin/
sudo cp src/redis-cli /usr/local/bin/


---------------------------------------------------------------------------------------------------------------------

install elasticsearch-5.4.0.deb:


sudo apt-get install default-jre
sudo apt-get install default-jdk


wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.4.0.deb

sudo apt-get update
sudo dpkg -i elasticsearch-5.4.0.deb
sudo systemctl enable elasticsearch.service

sudo systemctl start elasticsearch
sudo systemctl restart elasticsearch
sudo systemctl status elasticsearch



add log index to elasticsearch

curl -X PUT "localhost:9200/logs" -H 'Content-Type: application/json' -d'
{
    "settings" : {
        "index" : {
            "number_of_shards" : 5, 
            "number_of_replicas" : 1 
        }
    }
}
'


curl -XPUT 'http://localhost:9200/logs/_mapping/clickAdWordsLog' -d '
{
  "clickAdWordsLog": {
				"properties": {
					"CampaignID": {
						"type": "text"
					},
					"ClickCost": {
						"type": "text"
					},
					"ClickStatus": {
						"type": "text",
						"fields": {
							"keyword": {
								"type": "keyword",
								"ignore_above": 256
							}
						}
					},
					"IPAddress": {
						"type": "keyword"
					},
					"QueryOrSize": {
						"type": "text"
					},
					"SiteID": {
						"type": "text",
						"fields": {
							"keyword": {
								"type": "keyword",
								"ignore_above": 256
							}
						}
					},
					"SiteURL": {
						"type": "text"
					},
					"Time": {
						"type": "date",
						"format": "yyyy-MM-ddHH:mm:ss"
					},
					"UserData": {
						"type": "keyword"
					},
					"UserLocation": {
						"type": "keyword"
					},
					"UserOS": {
						"type": "text"
					},
					"UserResolution": {
						"type": "text"
					}
				}
			}
}
'


curl -XPUT 'http://localhost:9200/logs/_mapping/clickAdSenseLog' -d '
{
    "clickAdSenseLog": {
				"properties": {
					"CampaignID": {
						"type": "text"
					},
					"ClickCost": {
						"type": "text"
					},
					"ClickStatus": {
						"type": "text",
						"fields": {
							"keyword": {
								"type": "keyword",
								"ignore_above": 256
							}
						}
					},
					"IPAddress": {
						"type": "keyword"
					},
					"QueryOrSize": {
						"type": "text"
					},
					"SiteID": {
						"type": "text",
						"fields": {
							"keyword": {
								"type": "keyword",
								"ignore_above": 256
							}
						}
					},
					"SiteURL": {
						"type": "text"
					},
					"Time": {
						"type": "date",
						"format": "yyyy-MM-ddHH:mm:ss"
					},
					"UserData": {
						"type": "keyword"
					},
					"UserLocation": {
						"type": "keyword"
					},
					"UserOS": {
						"type": "text"
					},
					"UserResolution": {
						"type": "text"
					}
				}
			}
}
'



curl -XPUT 'http://localhost:9200/logs/_mapping/showAdWordsLog' -d '
{

"showAdWordsLog": {
				"properties": {
					"CampaignID": {
						"type": "text"
					},
					"ClickCost": {
						"type": "text"
					},
					"IPAddress": {
						"type": "keyword"
					},
					"QueryOrSize": {
						"type": "text"
					},
					"SiteID": {
						"type": "text",
						"fields": {
							"keyword": {
								"type": "keyword",
								"ignore_above": 256
							}
						}
					},
					"SiteURL": {
						"type": "text"
					},
					"Time": {
						"type": "date",
						"format": "yyyy-MM-ddHH:mm:ss"
					},
					"UserLocation": {
						"type": "keyword"
					},
					"UserOS": {
						"type": "text"
					},
					"UserResolution": {
						"type": "text"
					}
				}
			}

}
'


curl -XPUT 'http://localhost:9200/logs/_mapping/showAdSenseLog' -d '
{

"showAdSenseLog": {
				"properties": {
					"CampaignID": {
						"type": "text"
					},
					"ClickCost": {
						"type": "text"
					},
					"IPAddress": {
						"type": "keyword"
					},
					"QueryOrSize": {
						"type": "text"
					},
					"SiteURL": {
						"type": "text"
					},
					"Time": {
						"type": "date",
						"format": "yyyy-MM-ddHH:mm:ss"
					},
					"UserLocation": {
						"type": "keyword"
					},
					"UserOS": {
						"type": "text"
					},
					"UserResolution": {
						"type": "text"
					}
				}
			}

}
'

---------------------------------------------------------------------------------------------------------------------

download hiredis-master.zip from https://github.com/redis/hiredis


sudo apt-get install unzip
unzip hiredis-master.zip
make 
sudo make install

---------------------------------------------------------------------------------------------------------------------

sudo apt-get install curl
sudo apt-get install libcurl-dev
sudo apt-get install libcurl4-openssl-dev

---------------------------------------------------------------------------------------------------------------------


download cgicc-3.2.16.tar.gz form https://ftp.gnu.org/gnu/cgicc/

tar -xvzf cgicc-3.2.16.tar.gz

./configure
make
make check
sudo make install 

---------------------------------------------------------------------------------------------------------------------


Compiling and Installing Jansson
http://jansson.readthedocs.io/en/2.8/gettingstarted.html


download jansson-2.8.tar.gz form https://digip.org/jansson/releases/

tar -xvzf jansson-2.8.tar.gz

./configure
make
make check
sudo make install

---------------------------------------------------------------------------------------------------------------------


sudo apt-get install libboost-all-dev
sudo dpkg-reconfigure tzdata

sudo apt install fcgiwrap

sudo systemctl enable fcgiwrap
sudo systemctl start fcgiwrap
sudo systemctl status fcgiwrap


---------------------------------------------------------------------------------------------------------------------

run dashboard and backend modules

dashboard
/home/ubuntu/myprojectenv/bin/gunicorn -w 4 -b 127.0.0.1:8000 'wsgi:app'

backend
/home/ubuntu/myprojectenv/bin/gunicorn -w 4 -b 127.0.0.1:2222 'wsgi:app'

---------------------------------------------------------------------------------------------------------------------

install nginx
https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-20-04


add dashboard and click nginx configs to /etc/nginx/sites-available

dashboard:

server {
    listen 80;
    server_name 8tad.ir 185.130.78.93;


    location ^~ /static/  {
        autoindex on;
        include  /etc/nginx/mime.types;
        root /home/ubuntu/myproject/dashboard/;
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location / {
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   Host $http_host;
        proxy_pass         "http://127.0.0.1:8000";
    }
}


click:

server {
    listen 80;
    server_name click.8tad.ir;

    location  /click/ {

             gzip off;
             autoindex on;
             root  /usr/share/nginx/;
             fastcgi_param REMOTE_ADDR $remote_addr;
             fastcgi_pass  unix:/var/run/fcgiwrap.socket;
             include /etc/nginx/fastcgi_params;
             fastcgi_param SCRIPT_FILENAME  $request_filename;
             fastcgi_param QUERY_STRING $query_string;


    }

  }



sudo ln -s /etc/nginx/sites-available/click /etc/nginx/sites-enabled
sudo ln -s /etc/nginx/sites-available/dashboard /etc/nginx/sites-enabled



usermod -a -G ubuntu www-data
sudo chown -R :www-data /home/ubuntu/myproject/dashboard/static/



mkdir directory click to path /usr/share/nginx/

sudo chown -R :www-data /usr/share/nginx/click/


copy cwp.sh  ofu.sh  wp.sh to /usr/share/nginx/click/
  
  
sudo chmod +x /usr/share/nginx/click/wp.sh
sudo chmod +x /usr/share/nginx/click/cwp.sh
sudo chmod +x /usr/share/nginx/click/ofu.sh   


sudo systemctl restart nginx

---------------------------------------------------------------------------------------------------------------------


sudo chmod +x offline-modules
./offline-modules
   
   
 
  
  
 
  
